name: Deploy to Self-Hosted Server
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cloudflared
        run: |
          curl -L --output cloudflared.deb https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared.deb
          which cloudflared
          cloudflared --version

      - name: Setup SSH with Cloudflare Access
        env:
          CF_ACCESS_CLIENT_ID: ${{ secrets.CF_TUNNEL_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_TUNNEL_CLIENT_SECRET }}
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          printf '%s\n' "$SSH_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

          # Buat SSH config dengan ProxyCommand pakai cloudflared + service token
          cat > ~/.ssh/config <<EOF
          Host myserver
            HostName ssh.rojoinferno.com
            User afif
            IdentityFile ~/.ssh/id_ed25519
            ProxyCommand /usr/local/bin/cloudflared access ssh \
              --service-token-id $CF_ACCESS_CLIENT_ID \
              --service-token-secret $CF_ACCESS_CLIENT_SECRET \
              --hostname %h
          EOF
          chmod 600 ~/.ssh/config

      - name: Test SSH connection
        run: |
          ssh -o StrictHostKeyChecking=no myserver "whoami && hostname"

      - name: Deploy application
        run: |
          ssh -o StrictHostKeyChecking=no myserver <<'EOF'
            cd /path/to/app
            git pull origin main
            docker compose up -d --build
          EOF
